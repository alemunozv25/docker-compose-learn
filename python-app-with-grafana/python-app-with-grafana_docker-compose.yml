services:
  nginx:
    build: ./nginx
    depends_on:
      - python_app
    ports:
      - "8090:8090" # Expose container port 8090 to the host
    networks:
      - app_network

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    command: 
      - "--nginx.scrape-uri=http://nginx:8090/nginx_status" # Point to NGINX service
    depends_on:
      - nginx
    ports:
      - 9113:9113 # Expose exporter metrics port
    networks:
      - app_network

  python_app:
    build: ./python_app
    depends_on:
      - redis
    volumes:
      - python_data:/var/log
    ports:
      - "5001:5001" # Expose port 5001 for internal communication
    networks:
      - app_network

  redis:
    image: redis:latest
    volumes:
      - redis_data:/data  # Optional: for data persistence
    ports:
      - "6379:6379" # Expose Redis port (optional, for direct access)
    networks:
      - app_network

  redis-exporter:
    image: bitnami/redis-exporter:latest
    command: --redis.addr redis:6379 # Connects to the Redis service
    depends_on:
      - redis
    ports:
      - "9121:9121" # Exporter's default port
    networks:
      - app_network

  prometheus:
    image: prom/prometheus:v2.55.0
    depends_on:
      - redis-exporter
      - nginx-exporter
      - python_app
    volumes:
      - ./prometheus/:/etc/prometheus/  #Mount local prometheus dir content in /etc/prometheus
      # - prometheus_data:/prometheus # Optional: for persistent data storage
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    ports:
      - 9090:9090
    networks:
      - app_network

  loki:
    image: grafana/loki:3.5.2
    command: 
      - "-config.file=/etc/loki/local-config.yaml"
    volumes:
      - ./loki/loki-config.yml:/etc/loki/local-config.yaml #Mount local loki-config.yml and use it as Loki config file
      # - ./loki-config.yml:/etc/loki/loki-config.yaml
    ports:
      - 3100:3100
    networks:
      - app_network

  promtail:
    image: grafana/promtail:3.5.3
    depends_on:
      - loki
    # user: "0:0"  # Run as root to ensure access
    command: 
      - "-config.file=/etc/promtail/config.yml"
    volumes:
      - ./promtail/promtail-config.yml:/etc/promtail/config.yml #Mount local promtail-config.yml and use it as Promtail config file. /var/log/*log scraping is configured in config file. 
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # - /var/lib/docker/containers:/var/lib/docker/containers # For Docker container logs
    networks:
      - app_network

  demo-db:
    # image: grafana/tns-db:latest
    image: grafana/tns-db:gtm-hackathon-3
    ports:
      - 8082:80
    networks:
      - app_network

  grafana:
    image: grafana/grafana:12.1.0
    environment:
      - "GF_DEFAULT_APP_MODE=development"
      - "GF_LOG_LEVEL=debug"
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin # grants admin role to anonymous access
      - GF_AUTH_ANONYMOUS_ENABLED=true # removes login 1/2
      - GF_AUTH_BASIC_ENABLED=false # removes login 2/2
    depends_on:
      - prometheus
      - loki
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources #Mount local datasources.yaml and use it as Grafana Datasoruces config file
    ports:
      - 3000:3000
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  python_data: {}
  grafana_data: {}
  redis_data: {}
  prometheus_data: {}

